<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Nueva Reservación{% endblock %}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .form-container {
            margin: 50px auto;
            max-width: 600px;
            background: #ffffff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }
        h1 {
            font-size: 24px;
            font-weight: bold;
            color: #333333;
            margin-bottom: 20px;
            text-align: center;
        }
        label {
            font-weight: bold;
        }
        button {
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header>
        <nav class="navbar navbar-light bg-light">
            <div class="container-fluid">
                <a class="navbar-brand" href="{{ path('app_login') }}">
                    <img src="https://i.ibb.co/8m8GYfT/Logo-Uni.jpg" alt="UNI Logo" width="50">
                </a>
                <div class="d-flex justify-content-center">
                    <a href="{{ path('app_menu_docente') }}" class="btn btn-outline-secondary mx-auto">Inicio</a>
                </div>
                <span class="navbar-text">
                    {{ app.user.userIdentifier }}, <a href="{{ path('app_logout') }}">Cerrar Sesión</a>
                </span>
            </div>
        </nav>
    </header>
    
    <div class="container">
        <div class="form-container">
            <h1>Nueva Reservación</h1>
            {{ form_start(form) }}
                <div class="mb-3">
                    {{ form_label(form.medios_id, 'Medio') }}
                    {{ form_widget(form.medios_id, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="mb-3">
                    {{ form_label(form.aulas_id, 'Aula') }}
                    {{ form_widget(form.aulas_id, {'attr': {'class': 'form-control'}}) }}
                </div>
                <div class="mb-3">
                    {{ form_label(form.descripcion, 'Descripción') }}
                    {{ form_widget(form.descripcion, {'attr': {'class': 'form-control', 'placeholder': 'Escriba una descripción breve'}}) }}
                </div>
                <div class="mb-3">
                    {{ form_label(form.fecha, 'Fecha') }}
                    {{ form_widget(form.fecha, {'attr': {'class': 'form-control','type': 'date','min': minDate,'max': maxDate}}) }}
                </div>
                <div class="mb-3">
                    {{ form_label(form.hora_inicio, 'Hora de Inicio') }}
                    {{ form_widget(form.hora_inicio, {'attr': {'class': 'form-control', 'type': 'time'}}) }}
                </div>
                <div class="mb-3">
                    {{ form_label(form.hora_final, 'Hora de Finalización') }}
                    {{ form_widget(form.hora_final, {'attr': {'class': 'form-control', 'type': 'time'}}) }}
                </div>
                <button type="submit" class="btn btn-primary w-100">Solicitar</button>
            {{ form_end(form) }}
        </div>
    </div>

    <div class="mb-3 form-check">                   
                </div>
                <div class="mb-3 form-check"> 
                </div>

    <footer class="bg-light text-center py-3 fixed-bottom">
        <p>© UNI</p>
        <p>Contáctenos | Sede Central Avenida Universitaria | Teléfono: (505) 2270-1509</p>
    </footer>

    <script>
    document.addEventListener('DOMContentLoaded', function () {
        const horaInicio = document.querySelector('input[name="reservaciones[hora_inicio]"]');
        const horaFinal = document.querySelector('input[name="reservaciones[hora_final]"]');
        
        // Función que actualiza hora_final cuando se cambia hora_inicio
        horaInicio.addEventListener('change', function () {
            let startTime = new Date('1970-01-01T' + horaInicio.value + 'Z'); // Convierte a Date
            let endTime = new Date(startTime.getTime() + 15 * 60000); // Suma 15 minutos
            
            // Establece la hora mínima para hora_final (15 minutos después de hora_inicio)
            let minFinalTime = endTime.toISOString().substr(11, 5); // Hora mínima en formato hh:mm
            horaFinal.setAttribute('min', minFinalTime);
            
            // Establece la hora máxima para hora_final (3 horas después de hora_inicio)
            endTime = new Date(startTime.getTime() + 180 * 60000); // Suma 3 horas
            let maxFinalTime = endTime.toISOString().substr(11, 5); // Hora máxima en formato hh:mm
            horaFinal.setAttribute('max', maxFinalTime);
        });

        // Configura las horas predeterminadas
        horaInicio.setAttribute('min', '07:20'); // 15 minutos después de 07:20
        horaInicio.setAttribute('max', '17:00'); // 3 horas después de 07:20
        horaFinal.setAttribute('min', '07:35'); // 15 minutos después de 07:20
        horaFinal.setAttribute('max', '17:00'); // 3 horas después de 07:20
    });
</script>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
